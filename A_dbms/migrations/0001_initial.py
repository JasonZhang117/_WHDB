# Generated by Django 2.1.3 on 2019-07-03 02:32

import A_dbms.models.m_warrant
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_agree', models.CharField(max_length=64, unique=True, verbose_name='代理合同')),
                ('agent_item', models.TextField(blank=True, null=True, verbose_name='代理事项')),
                ('fee_scale', models.TextField(blank=True, null=True, verbose_name='收费标准')),
                ('agent_date', models.DateField(verbose_name='代理日期')),
                ('due_date', models.DateField(verbose_name='到期日')),
                ('agent_state', models.IntegerField(choices=[(1, '生效'), (11, '失效'), (99, '注销')], default=1, verbose_name='合同状态')),
                ('agent_remark', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
                ('agentor_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_agent',
                'verbose_name_plural': '追偿-代理合同',
            },
        ),
        migrations.CreateModel(
            name='Agreements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flow_credit', models.FloatField(default=100000000, verbose_name='综合额度')),
                ('flow_limit', models.FloatField(default=10000000, verbose_name='单笔（综合）')),
                ('back_credit', models.FloatField(default=0, verbose_name='保函额度')),
                ('back_limit', models.FloatField(default=0, verbose_name='单笔（保函）')),
                ('credit_date', models.DateField(default=datetime.date.today, verbose_name='合作日期')),
                ('due_date', models.DateField(default=datetime.date.today, verbose_name='到期日')),
                ('agreementor_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_agreements',
                'verbose_name_plural': '外部-合作协议',
            },
        ),
        migrations.CreateModel(
            name='Agrees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agree_num', models.CharField(max_length=32, unique=True, verbose_name='_合同编号')),
                ('agree_name', models.IntegerField(choices=[(1, '委托保证合同'), (11, '最高额委托保证合同'), (21, '委托出具分离式保函合同'), (31, '借款合同')], verbose_name='合同种类')),
                ('num_prefix', models.CharField(max_length=32, verbose_name='_编号前缀')),
                ('agree_term', models.IntegerField(verbose_name='合同期限（月）')),
                ('agree_typ', models.IntegerField(choices=[(1, '单笔'), (2, '最高额'), (3, '保函'), (7, '小贷'), (41, '单笔(公证)'), (42, '最高额(公证)'), (47, '小贷(公证)')], verbose_name='合同种类')),
                ('guarantee_typ', models.CharField(choices=[('①', '①'), ('②', '②'), ('③', '③'), ('④', '④'), ('⑤', '⑤'), ('⑥', '⑥'), ('⑦', '⑦'), ('⑧', '⑧')], max_length=6, verbose_name='反担保种类数')),
                ('agree_copies', models.IntegerField(verbose_name='合同份数')),
                ('agree_amount', models.FloatField(verbose_name='合同金额')),
                ('amount_limit', models.FloatField(verbose_name='放款限额')),
                ('agree_rate', models.CharField(max_length=128, verbose_name='收费')),
                ('agree_sign_date', models.DateField(blank=True, null=True, verbose_name='签批日期')),
                ('charge', models.FloatField(default=0, verbose_name='应收保费（元）')),
                ('ascertain_date', models.DateField(blank=True, null=True, verbose_name='落实日期')),
                ('agree_remark', models.TextField(blank=True, null=True, verbose_name='落实情况')),
                ('agree_state', models.IntegerField(choices=[(11, '待签批'), (21, '已签批'), (31, '未落实'), (41, '已落实'), (51, '待变更'), (61, '已解保'), (99, '已注销')], default=11, verbose_name='合同状态')),
                ('agree_notify_sum', models.FloatField(default=0, verbose_name='_通知金额')),
                ('agree_provide_sum', models.FloatField(default=0, verbose_name='_放款金额')),
                ('agree_repayment_sum', models.FloatField(default=0, verbose_name='_还款金额')),
                ('agree_balance', models.FloatField(default=0, verbose_name='_在保余额')),
                ('agree_sign', models.TextField(blank=True, null=True, verbose_name='签批单')),
                ('agree_view', models.TextField(blank=True, null=True, verbose_name='合同预览')),
                ('agree_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_agrees',
                'verbose_name_plural': '合同',
            },
        ),
        migrations.CreateModel(
            name='Appraisals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.CharField(max_length=32, unique=True, verbose_name='评审会编号')),
                ('review_year', models.IntegerField(default=2019, verbose_name='评审年份')),
                ('review_order', models.IntegerField(verbose_name='评审次序')),
                ('review_model', models.IntegerField(choices=[(1, '内审'), (2, '外审')], verbose_name='评审类型')),
                ('review_date', models.DateField(default=datetime.date.today, verbose_name='评审日期')),
                ('meeting_state', models.IntegerField(choices=[(1, '待上会'), (2, '已上会')], default=1, verbose_name='会议状态')),
                ('meeting_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_appraisals',
                'verbose_name_plural': '评审',
            },
        ),
        migrations.CreateModel(
            name='ArticleChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_view', models.IntegerField(choices=[(1, '变更申请'), (11, '同意变更'), (21, '否决变更')], default=1, verbose_name='变更意见')),
                ('change_detail', models.TextField(verbose_name='签批详情')),
                ('change_date', models.DateField(verbose_name='变更日期')),
                ('build_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_articlechange',
                'verbose_name_plural': '项目-变更',
            },
        ),
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_num', models.CharField(max_length=32, unique=True, verbose_name='_项目编号')),
                ('renewal', models.FloatField(default=0, verbose_name='续贷金额（元）')),
                ('augment', models.FloatField(default=0, verbose_name='新增金额（元）')),
                ('amount', models.FloatField(default=0, verbose_name='_总额度（元）')),
                ('credit_term', models.IntegerField(default=12, verbose_name='授信期限（月）')),
                ('article_date', models.DateField(blank=True, null=True, verbose_name='反馈日期')),
                ('review_date', models.DateField(blank=True, null=True, verbose_name='上会日期')),
                ('summary_num', models.CharField(blank=True, max_length=32, null=True, unique=True, verbose_name='_纪要编号')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='_纪要')),
                ('sign_type', models.IntegerField(blank=True, choices=[(1, '同意'), (2, '不同意')], null=True, verbose_name='签批结论')),
                ('rcd_opinion', models.TextField(blank=True, null=True, verbose_name='风控部意见')),
                ('convenor_opinion', models.TextField(blank=True, null=True, verbose_name='招集人意见')),
                ('sign_detail', models.TextField(blank=True, null=True, verbose_name='签批人意见')),
                ('sign_date', models.DateField(blank=True, null=True, verbose_name='签批日期')),
                ('article_state', models.IntegerField(choices=[(1, '待反馈'), (2, '已反馈'), (3, '待上会'), (4, '已上会'), (5, '已签批'), (51, '已放款'), (52, '已放完'), (55, '已解保'), (61, '待变更'), (99, '已注销')], default=1, verbose_name='_项目状态')),
                ('classification', models.IntegerField(choices=[(1, '正常'), (11, '关注'), (21, '次级'), (31, '可疑'), (41, '损失')], default=1, verbose_name='_风险分类')),
                ('article_notify_sum', models.FloatField(default=0, verbose_name='_通知金额')),
                ('article_provide_sum', models.FloatField(default=0, verbose_name='_放款金额')),
                ('article_repayment_sum', models.FloatField(default=0, verbose_name='_还款金额')),
                ('article_balance', models.FloatField(default=0, verbose_name='_在保余额')),
                ('build_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_articles',
                'verbose_name_plural': '项目',
                'ordering': ['-build_date', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Authorities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='权限名称')),
                ('url', models.CharField(blank=True, max_length=128, null=True, verbose_name='URL')),
                ('url_name', models.CharField(max_length=128, unique=True, verbose_name='URL_NAME')),
                ('ordery', models.IntegerField(blank=True, null=True, verbose_name='优先级')),
            ],
            options={
                'db_table': 'dbms_authorities',
                'verbose_name_plural': '内部-权限',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Branches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='放款银行')),
                ('short_name', models.CharField(max_length=32, unique=True, verbose_name='银行简称')),
                ('branch_state', models.IntegerField(choices=[(1, '正常'), (2, '注销')], default=1, verbose_name='银行状态')),
                ('branch_flow', models.FloatField(default=0, verbose_name='_流贷余额')),
                ('branch_accept', models.FloatField(default=0, verbose_name='_承兑余额')),
                ('branch_back', models.FloatField(default=0, verbose_name='_保函余额')),
                ('entrusted_loan', models.FloatField(default=0, verbose_name='_委贷余额')),
                ('petty_loan', models.FloatField(default=0, verbose_name='_小贷余额')),
                ('amount', models.FloatField(default=0, verbose_name='_在保总额')),
                ('branchor_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_branchess',
                'verbose_name_plural': '外部-放款银行',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Cartes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=64, unique=True, verbose_name='菜单名称')),
                ('ordery', models.IntegerField(verbose_name='优先级')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='carte_parent', to='A_dbms.Cartes', verbose_name='母菜单')),
            ],
            options={
                'db_table': 'dbms_cartes',
                'verbose_name_plural': '内部-菜单',
                'ordering': ['ordery'],
            },
        ),
        migrations.CreateModel(
            name='Charge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charge_type', models.IntegerField(choices=[(1, '律师代理费'), (11, '案件受理费'), (21, '财产保全费'), (25, '评估费'), (31, '执行费'), (41, '公告费'), (99, '其他费用')], verbose_name='费用类型')),
                ('charge_amount', models.FloatField(verbose_name='金额')),
                ('charge_date', models.DateField(verbose_name='支付日期')),
                ('charge_remark', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
                ('chargor_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_charge',
                'verbose_name_plural': '追偿-追偿费用',
            },
        ),
        migrations.CreateModel(
            name='Charges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(verbose_name='收费金额')),
                ('balance', models.FloatField(verbose_name='应收余额')),
                ('charge_date', models.DateField(default=datetime.date.today, verbose_name='收费日期')),
                ('agree', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='charge_agree', to='A_dbms.Agrees', verbose_name='委托合同')),
            ],
            options={
                'db_table': 'dbms_charges',
                'verbose_name_plural': '放款-收费',
            },
        ),
        migrations.CreateModel(
            name='Chattel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chattel_typ', models.IntegerField(choices=[(1, '存货'), (11, '机器设备'), (21, '医疗设备'), (99, '其他')], default=1, verbose_name='动产种类')),
                ('chattel_detail', models.TextField(verbose_name='动产具体描述')),
                ('chattel_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_rchattel',
                'verbose_name_plural': '权证-动产',
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_type', models.IntegerField(choices=[(0, ''), (1, '同意'), (2, '复议'), (3, '不同意')], default=0, verbose_name='评委意见')),
                ('concrete', models.TextField(verbose_name='意见详情')),
                ('comment_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_comments',
                'verbose_name_plural': '评审-意见',
            },
        ),
        migrations.CreateModel(
            name='Compensatories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='标志')),
                ('compensatory_date', models.DateField(default=datetime.date.today, verbose_name='代偿日期')),
                ('compensatory_capital', models.FloatField(default=0, verbose_name='代偿本金')),
                ('compensatory_interest', models.FloatField(default=0, verbose_name='代偿利息')),
                ('default_interest', models.FloatField(default=0, verbose_name='代偿罚息')),
                ('compensatory_amount', models.FloatField(verbose_name='代偿总额')),
                ('dun_state', models.IntegerField(choices=[(1, '已代偿'), (3, '诉前'), (11, '一审'), (21, '上诉及再审'), (31, '案外之诉'), (41, '执行'), (91, '结案')], default=1, verbose_name='追偿状态')),
                ('compensator_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_compensatories',
                'verbose_name_plural': '追偿-代偿',
            },
        ),
        migrations.CreateModel(
            name='Construction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coustruct_locate', models.CharField(max_length=64, verbose_name='工程地址')),
                ('coustruct_app', models.IntegerField(choices=[(91, '在建工程')], default=91, verbose_name='工程类别')),
                ('coustruct_area', models.FloatField(verbose_name='工程面积')),
                ('coustructor_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_construction',
                'verbose_name_plural': '权证-在建工程',
            },
        ),
        migrations.CreateModel(
            name='Cooperators',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='合作机构')),
                ('short_name', models.CharField(max_length=32, unique=True, verbose_name='机构简称')),
                ('cooperator_type', models.IntegerField(choices=[(1, '金融机构'), (11, '律师事务所'), (21, '评估事务所')], default=1, verbose_name='机构类型')),
                ('flow_credit', models.FloatField(blank=True, null=True, verbose_name='综合额度')),
                ('flow_limit', models.FloatField(blank=True, null=True, verbose_name='单笔限额（综合）')),
                ('back_credit', models.FloatField(blank=True, null=True, verbose_name='保函额度')),
                ('back_limit', models.FloatField(blank=True, null=True, verbose_name='单笔限额（保函）')),
                ('credit_date', models.DateField(blank=True, null=True, verbose_name='合作日期')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='到期日')),
                ('up_scale', models.FloatField(default=0, verbose_name='最高额上浮比例')),
                ('cooperator_flow', models.FloatField(default=0, verbose_name='_流贷余额')),
                ('cooperator_accept', models.FloatField(default=0, verbose_name='_承兑余额')),
                ('cooperator_back', models.FloatField(default=0, verbose_name='_保函余额')),
                ('entrusted_loan', models.FloatField(default=0, verbose_name='_委贷余额')),
                ('petty_loan', models.FloatField(default=0, verbose_name='_小贷余额')),
                ('amount', models.FloatField(default=0, verbose_name='_在保总额')),
                ('cooperator_state', models.IntegerField(choices=[(1, '正常'), (11, '注销')], default=1, verbose_name='状态')),
                ('cooperat_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_cooperators',
                'verbose_name_plural': '外部-合作机构',
            },
        ),
        migrations.CreateModel(
            name='Counters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counter_num', models.CharField(max_length=32, unique=True, verbose_name='_合同编号')),
                ('counter_name', models.IntegerField(blank=True, choices=[(1, '保证反担保合同'), (2, '不可撤销的反担保函'), (3, '抵押反担保合同'), (4, '应收账款质押反担保合同'), (5, '股权质押反担保合同'), (6, '质押反担保合同'), (9, '预售合同'), (21, '最高额保证反担保合同'), (23, '最高额抵押反担保合同'), (24, '最高额应收账款质押反担保合同'), (25, '最高额股权质押反担保合同'), (26, '最高额质押反担保合同'), (41, '保证合同'), (43, '抵押合同'), (44, '应收账款质押合同'), (45, '股权质押合同'), (46, '质押合同'), (59, '举办者权益转让协议')], null=True, verbose_name='合同种类')),
                ('counter_typ', models.IntegerField(choices=[(1, '企业担保'), (2, '个人保证'), (11, '房产抵押'), (12, '土地抵押'), (13, '动产抵押'), (14, '在建工程抵押'), (15, '车辆抵押'), (31, '应收质押'), (32, '股权质押'), (33, '票据质押'), (34, '动产质押'), (41, '其他权利质押'), (51, '股权预售'), (52, '房产预售'), (53, '土地预售'), (59, '其他预售')], verbose_name='合同类型')),
                ('counter_copies', models.IntegerField(verbose_name='合同份数')),
                ('counter_state', models.IntegerField(choices=[(11, '未签订'), (21, '已签订'), (31, '作废')], default=11, verbose_name='签订状态')),
                ('counter_sign_date', models.DateField(blank=True, null=True, verbose_name='签订日期')),
                ('counter_remark', models.TextField(blank=True, null=True, verbose_name='签订备注')),
                ('counter_view', models.TextField(blank=True, null=True, verbose_name='合同预览')),
                ('counter_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('agree', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='counter_agree', to='A_dbms.Agrees', verbose_name='委托保证合同')),
            ],
            options={
                'db_table': 'dbms_counters',
                'verbose_name_plural': '合同-反担保',
            },
        ),
        migrations.CreateModel(
            name='CountersAssure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counter_assure_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('counter', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='assure_counter', to='A_dbms.Counters', verbose_name='反担保合同')),
            ],
            options={
                'db_table': 'dbms_countersassure',
                'verbose_name_plural': '合同-保证反担保',
            },
        ),
        migrations.CreateModel(
            name='CountersWarrants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counter_warrant_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('counter', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='warrant_counter', to='A_dbms.Counters', verbose_name='反担保合同')),
            ],
            options={
                'db_table': 'dbms_counterwarrants',
                'verbose_name_plural': '合同-抵质押合同',
            },
        ),
        migrations.CreateModel(
            name='Customes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='客户名称')),
                ('short_name', models.CharField(max_length=16, unique=True, verbose_name='客户简称')),
                ('genre', models.IntegerField(choices=[(1, '企业'), (2, '个人')], default=1, verbose_name='客户类型')),
                ('contact_addr', models.CharField(max_length=64, verbose_name='联系地址')),
                ('linkman', models.CharField(max_length=16, verbose_name='联系人')),
                ('contact_num', models.CharField(max_length=13, verbose_name='联系电话')),
                ('review_plan_date', models.DateField(blank=True, null=True, verbose_name='保后计划')),
                ('review_state', models.IntegerField(choices=[(1, '待保后'), (11, '待报告'), (21, '已完成'), (81, '自主保后')], default=21, verbose_name='_保后状态')),
                ('review_date', models.DateField(blank=True, null=True, verbose_name='保后日期')),
                ('review_amount', models.IntegerField(default=0, verbose_name='年度调查')),
                ('classification', models.IntegerField(choices=[(1, '正常'), (11, '关注'), (21, '次级'), (31, '可疑'), (41, '损失')], default=1, verbose_name='_风险分类')),
                ('lately_date', models.DateField(blank=True, null=True, verbose_name='最近调查')),
                ('custom_dun_state', models.IntegerField(choices=[(1, '正常'), (11, '被告'), (99, '注销')], default=1, verbose_name='_风险分类')),
                ('credit_amount', models.FloatField(default=0, verbose_name='_授信总额')),
                ('custom_flow', models.FloatField(default=0, verbose_name='_流贷余额')),
                ('custom_accept', models.FloatField(default=0, verbose_name='_承兑余额')),
                ('custom_back', models.FloatField(default=0, verbose_name='_保函余额')),
                ('entrusted_loan', models.FloatField(default=0, verbose_name='_委贷余额')),
                ('petty_loan', models.FloatField(default=0, verbose_name='_小贷余额')),
                ('amount', models.FloatField(default=0, verbose_name='_在保总额')),
                ('custom_state', models.IntegerField(choices=[(11, '担保客户'), (21, '反担保客户'), (99, '注销客户')], default=21, verbose_name='客户状态')),
                ('custom_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_customes',
                'verbose_name_plural': '客户',
                'ordering': ['genre', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CustomesC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decisionor', models.IntegerField(choices=[(11, '股东会'), (13, '合伙人会议'), (15, '举办者会议'), (21, '董事会'), (23, '管理委员会')], default=11, verbose_name='决策机构')),
                ('capital', models.FloatField(verbose_name='注册资本')),
                ('registered_addr', models.CharField(max_length=64, verbose_name='注册地址')),
                ('representative', models.CharField(max_length=16, verbose_name='法人代表')),
                ('custome', models.OneToOneField(limit_choices_to={'genre': 1}, on_delete=django.db.models.deletion.CASCADE, related_name='company_custome', to='A_dbms.Customes', verbose_name='企业客户')),
            ],
            options={
                'db_table': 'dbms_customesc',
                'verbose_name_plural': '客户-企业',
            },
        ),
        migrations.CreateModel(
            name='CustomesP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_num', models.CharField(max_length=18, unique=True, verbose_name='身份证号码')),
                ('license_addr', models.CharField(max_length=64, verbose_name='身份证地址')),
                ('marital_status', models.IntegerField(choices=[(1, '未婚'), (11, '已婚'), (21, '离异'), (41, '丧偶'), (99, '------')], default=1, verbose_name='婚姻状况')),
                ('custome', models.OneToOneField(limit_choices_to={'genre': 2}, on_delete=django.db.models.deletion.CASCADE, related_name='person_custome', to='A_dbms.Customes', verbose_name='个人客户')),
                ('spouses', models.OneToOneField(blank=True, limit_choices_to={'genre': 2}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='spouses_custom', to='A_dbms.Customes', verbose_name='配偶')),
            ],
            options={
                'db_table': 'dbms_customesp',
                'verbose_name_plural': '客户-个人',
            },
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, unique=True, verbose_name='部门名称')),
            ],
            options={
                'db_table': 'dbms_departments',
                'verbose_name_plural': '内部-部门',
            },
        ),
        migrations.CreateModel(
            name='Districtes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, unique=True, verbose_name='街道名称')),
            ],
            options={
                'db_table': 'dbms_districtes',
                'verbose_name_plural': '客户-区域',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Draft',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ', models.IntegerField(choices=[(11, '商业承兑汇票'), (21, '银行承兑汇票'), (31, '支票')], default=11, verbose_name='票据种类')),
                ('denomination', models.FloatField(verbose_name='票面总额')),
                ('draft_detail', models.TextField(verbose_name='票据描述')),
                ('draft_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_draft',
                'verbose_name_plural': '权证-应收票据',
            },
        ),
        migrations.CreateModel(
            name='DraftExtend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('draft_typ', models.IntegerField(choices=[(1, '电子银行承兑汇票'), (2, '银行承兑汇票'), (11, '电子商业承兑汇票'), (12, '商业承兑汇票'), (21, '支票')], default=1, verbose_name='票据种类')),
                ('draft_num', models.CharField(max_length=64, verbose_name='票据编号')),
                ('draft_acceptor', models.CharField(max_length=64, verbose_name='承兑人')),
                ('draft_amount', models.FloatField(verbose_name='票面金额')),
                ('issue_date', models.DateField(verbose_name='出票日期')),
                ('due_date', models.DateField(verbose_name='到期日')),
                ('draft_state', models.IntegerField(choices=[(1, '未入库'), (2, '已入库'), (21, '置换出库'), (31, '解保出库'), (41, '托收出库'), (99, '已注销')], default=1, verbose_name='_票据状态')),
                ('draft_e_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('draft', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extend_draft', to='A_dbms.Draft', verbose_name='票据')),
            ],
            options={
                'db_table': 'dbms_draftextend',
                'verbose_name_plural': '权证-票据明细',
            },
        ),
        migrations.CreateModel(
            name='Dun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, unique=True, verbose_name='追偿')),
                ('dun_amount', models.FloatField(default=0, verbose_name='追偿金额')),
                ('dun_retrieve_sun', models.FloatField(default=0, verbose_name='_回收金额')),
                ('dun_charge_sun', models.FloatField(default=0, verbose_name='_追偿费用')),
                ('dun_balance', models.FloatField(default=0, verbose_name='_剩余金额')),
                ('dun_stage', models.IntegerField(choices=[(1, '已代偿'), (3, '诉前'), (11, '一审'), (21, '上诉及再审'), (31, '案外之诉'), (41, '执行'), (91, '结案')], default=1, verbose_name='追偿状态')),
                ('dunor_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('compensatory', models.ManyToManyField(blank=True, null=True, related_name='dun_compensatory', to='A_dbms.Compensatories', verbose_name='代偿')),
                ('custom', models.ManyToManyField(blank=True, null=True, related_name='dun_custom', to='A_dbms.Customes', verbose_name='被告人')),
            ],
            options={
                'db_table': 'dbms_dun',
                'verbose_name_plural': '追偿',
            },
        ),
        migrations.CreateModel(
            name='Evaluate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluate_state', models.IntegerField(choices=[(0, '待评估'), (1, '机构评估'), (11, '机构预估'), (21, '综合询价'), (31, '购买成本'), (41, '拍卖评估'), (99, '无需评估')], default=1, verbose_name='评估方式')),
                ('evaluate_value', models.FloatField(verbose_name='评估价值')),
                ('evaluate_date', models.DateField(verbose_name='评估日期')),
                ('evaluate_explain', models.CharField(blank=True, max_length=128, null=True, verbose_name='评估说明')),
                ('evaluator_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_evaluate',
                'verbose_name_plural': '权证-评估',
            },
        ),
        migrations.CreateModel(
            name='Experts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='评审姓名')),
                ('organization', models.CharField(max_length=32, verbose_name='工作单位')),
                ('job', models.CharField(max_length=16, null=True, verbose_name='职务')),
                ('level', models.IntegerField(choices=[(1, '内部'), (2, '顾问'), (3, '一级'), (4, '二级')], default=1, verbose_name='级别')),
                ('contact_numb', models.CharField(max_length=16, unique=True, verbose_name='联系电话')),
                ('email', models.CharField(max_length=32, verbose_name='邮箱')),
                ('ordery', models.IntegerField(verbose_name='优先级')),
                ('expert_state', models.IntegerField(choices=[(1, '正常'), (2, '注销')], default=1, verbose_name='评审状态')),
                ('expertor_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_experts',
                'verbose_name_plural': '外部-评审专家',
                'ordering': ['ordery'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('propose', models.IntegerField(choices=[(1, '符合上会条件'), (11, '暂不符合上会条件'), (21, '建议终止项目')], verbose_name='上会建议')),
                ('analysis', models.TextField(verbose_name='风险分析')),
                ('suggestion', models.TextField(verbose_name='风控意见')),
                ('feedback_date', models.DateField(default=datetime.date.today, verbose_name='提交日期')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='feedback_article', to='A_dbms.Articles', verbose_name='项目')),
            ],
            options={
                'db_table': 'dbms_feedback',
                'verbose_name_plural': '项目-反馈',
            },
        ),
        migrations.CreateModel(
            name='Grounds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ground_locate', models.CharField(max_length=64, verbose_name='土地坐落')),
                ('ground_app', models.IntegerField(choices=[(1, '住宅'), (5, '城镇混合住宅'), (11, '商住'), (21, '商服'), (31, '工业'), (91, '林权')], default=1, verbose_name='土地用途')),
                ('ground_area', models.FloatField(verbose_name='土地面积')),
                ('ground_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_grounds',
                'verbose_name_plural': '权证-土地',
            },
        ),
        migrations.CreateModel(
            name='HouseBag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('housebag_locate', models.CharField(max_length=64, unique=True, verbose_name='房产坐落')),
                ('housebag_app', models.IntegerField(choices=[(1, '住宅'), (11, '商业'), (21, '办公'), (31, '公寓'), (41, '生产性工业用房'), (42, '非生产性工业用房'), (43, '厂房'), (44, '工业性科研用房'), (45, '工业'), (46, '非生产性工业科研用房'), (51, '科研'), (52, '车间'), (53, '消防通道'), (54, '倒班房'), (61, '车库'), (62, '车位'), (63, '首层机动车停车场'), (71, '仓储'), (72, '仓储用房及配送用房'), (81, '在建工程'), (91, '其他'), (99, '期房')], default=1, verbose_name='房产用途')),
                ('housebag_area', models.FloatField(verbose_name='建筑面积')),
                ('housebag_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_housebag',
                'verbose_name_plural': '权证-房产包',
            },
        ),
        migrations.CreateModel(
            name='Houses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_locate', models.CharField(max_length=128, unique=True, verbose_name='房产坐落')),
                ('house_app', models.IntegerField(choices=[(1, '住宅'), (11, '商业'), (21, '办公'), (31, '公寓'), (41, '生产性工业用房'), (42, '非生产性工业用房'), (43, '厂房'), (44, '工业性科研用房'), (45, '工业'), (46, '非生产性工业科研用房'), (51, '科研'), (52, '车间'), (53, '消防通道'), (54, '倒班房'), (61, '车库'), (62, '车位'), (63, '首层机动车停车场'), (71, '仓储'), (72, '仓储用房及配送用房'), (81, '在建工程'), (91, '其他'), (99, '期房')], default=1, verbose_name='房产用途')),
                ('house_area', models.FloatField(verbose_name='建筑面积')),
                ('house_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
                ('house_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_houses',
                'verbose_name_plural': '权证-房产',
            },
        ),
        migrations.CreateModel(
            name='Hypothecs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hypothec_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('agree', models.ForeignKey(limit_choices_to=A_dbms.models.m_warrant.limit_agree_choices, on_delete=django.db.models.deletion.CASCADE, related_name='ypothec_agree', to='A_dbms.Agrees', verbose_name='委托合同')),
            ],
            options={
                'db_table': 'dbms_hypothecs',
                'verbose_name_plural': '权证-他权',
            },
        ),
        migrations.CreateModel(
            name='Industries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16, unique=True, verbose_name='行业编码')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='行业名称')),
                ('cod_nam', models.CharField(max_length=48, verbose_name='代码名称')),
            ],
            options={
                'db_table': 'dbms_industriess',
                'verbose_name_plural': '客户-行业',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Inquiry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inquiry_type', models.IntegerField(choices=[(1, '日常跟踪'), (3, '拍卖评估'), (5, '拍卖挂网'), (11, '拍卖成交'), (21, '拍卖流拍'), (31, '执行回转'), (99, '注销')], default=1, verbose_name='查询类型')),
                ('evaluate_date', models.DateField(blank=True, null=True, verbose_name='评估日期')),
                ('evaluate_value', models.FloatField(blank=True, null=True, verbose_name='评估价值')),
                ('auction_date', models.DateField(blank=True, null=True, verbose_name='拍卖日期')),
                ('listing_price', models.FloatField(blank=True, null=True, verbose_name='挂网价格')),
                ('transaction_date', models.DateField(blank=True, null=True, verbose_name='成交日期')),
                ('auction_amount', models.FloatField(blank=True, null=True, verbose_name='成交金额')),
                ('inquiry_detail', models.TextField(blank=True, null=True, verbose_name='查询情况')),
                ('inquiryor_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_inquiry',
                'verbose_name_plural': '追偿-查询情况',
            },
        ),
        migrations.CreateModel(
            name='Investigate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inv_typ', models.IntegerField(choices=[(11, '超时补调'), (21, '分次补调')], verbose_name='补调类型')),
                ('i_analysis', models.TextField(blank=True, null=True, verbose_name='风险分析')),
                ('i_suggestion', models.TextField(blank=True, null=True, verbose_name='风控建议')),
                ('i_classification', models.IntegerField(blank=True, choices=[(1, '正常'), (11, '关注'), (21, '次级'), (31, '可疑'), (41, '损失')], null=True, verbose_name='风险分类')),
                ('inv_date', models.DateField(default=datetime.date(2019, 7, 3), verbose_name='补调日期')),
                ('custom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inv_custom', to='A_dbms.Customes', verbose_name='客户')),
            ],
            options={
                'db_table': 'dbms_investigate',
                'verbose_name_plural': '项目-补调',
                'ordering': ['inv_date'],
            },
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, unique=True, verbose_name='岗位名称')),
                ('authority', models.ManyToManyField(blank=True, null=True, to='A_dbms.Authorities', verbose_name='权限')),
            ],
            options={
                'db_table': 'dbms_jobs',
                'verbose_name_plural': '内部-岗位',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Judgment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('judgment_file', models.CharField(max_length=64, unique=True, verbose_name='文件编号')),
                ('judgment_detail', models.TextField(verbose_name='判决内容')),
                ('judgment_unit', models.CharField(max_length=64, verbose_name='单位')),
                ('judgment_date', models.DateField(verbose_name='判决日期')),
                ('judgmentor_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('dun', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='judgment_dun', to='A_dbms.Dun', verbose_name='追偿项目')),
            ],
            options={
                'db_table': 'dbms_judgment',
                'verbose_name_plural': '追偿-判决',
            },
        ),
        migrations.CreateModel(
            name='LendingCustoms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lending_c_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('custome', models.ManyToManyField(related_name='lending_custom', to='A_dbms.Customes', verbose_name='反担保人')),
            ],
            options={
                'db_table': 'dbms_lendingcustom',
                'verbose_name_plural': '反担保-保证反担保',
            },
        ),
        migrations.CreateModel(
            name='LendingOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(choices=[(1, '第一次'), (2, '第二次'), (3, '第三次'), (4, '第四次')], default=1, verbose_name='发放次序')),
                ('order_amount', models.FloatField(verbose_name='拟放金额')),
                ('remark', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
                ('lending_provide_sum', models.FloatField(default=0, verbose_name='_放款金额')),
                ('lending_repayment_sum', models.FloatField(default=0, verbose_name='_还款金额')),
                ('lending_balance', models.FloatField(default=0, verbose_name='_在保余额')),
                ('lending_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_lending',
                'verbose_name_plural': '评审-发放次序',
            },
        ),
        migrations.CreateModel(
            name='LendingSures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sure_typ', models.IntegerField(choices=[(1, '企业保证'), (2, '个人保证'), (11, '房产抵押'), (12, '土地抵押'), (13, '动产抵押'), (14, '在建工程抵押'), (15, '车辆抵押'), (21, '房产顺位'), (22, '土地顺位'), (23, '在建工程顺位'), (24, '动产顺位'), (31, '应收质押'), (32, '股权质押'), (33, '票据质押'), (34, '动产质押'), (39, '其他权利质押'), (42, '房产监管'), (43, '土地监管'), (44, '票据监管'), (47, '动产监管'), (49, '其他监管'), (51, '股权预售'), (52, '房产预售'), (53, '土地预售'), (59, '其他预售')], verbose_name='担保类型')),
                ('sure_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('lending', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sure_lending', to='A_dbms.LendingOrder', verbose_name='放款次序')),
            ],
            options={
                'db_table': 'dbms_lendingsure',
                'verbose_name_plural': '反担保',
                'ordering': ['sure_typ'],
            },
        ),
        migrations.CreateModel(
            name='LendingWarrants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lending_w_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_lendingwarrant',
                'verbose_name_plural': '反担保-抵质押',
                'ordering': ['lending_w_date'],
            },
        ),
        migrations.CreateModel(
            name='Notify',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notify_money', models.FloatField(verbose_name='通知金额')),
                ('notify_date', models.DateField(default=datetime.date.today, verbose_name='日期')),
                ('contracts_lease', models.CharField(blank=True, max_length=32, null=True, verbose_name='借款合同编号')),
                ('contract_guaranty', models.CharField(blank=True, max_length=32, null=True, verbose_name='保证合同编号')),
                ('remark', models.CharField(blank=True, max_length=256, null=True, verbose_name='备注')),
                ('time_limit', models.IntegerField(verbose_name='期限（月）')),
                ('weighting', models.FloatField(verbose_name='加权金额')),
                ('notify_provide_sum', models.FloatField(default=0, verbose_name='_放款金额')),
                ('notify_repayment_sum', models.FloatField(default=0, verbose_name='_还款金额')),
                ('notify_balance', models.FloatField(default=0, verbose_name='_在保余额')),
                ('agree', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notify_agree', to='A_dbms.Agrees', verbose_name='委托保证合同')),
            ],
            options={
                'db_table': 'dbms_notify',
                'verbose_name_plural': '放款-放款通知',
            },
        ),
        migrations.CreateModel(
            name='Others',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_typ', models.IntegerField(choices=[(11, '购房合同'), (21, '车辆合格证'), (31, '专利'), (41, '商标'), (71, '账户'), (99, '其他')], default=99, verbose_name='资产种类')),
                ('cost', models.FloatField(verbose_name='价值（元）')),
                ('other_detail', models.TextField(verbose_name='具体描述')),
                ('otheror_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('other_owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='other_custome', to='A_dbms.Customes', verbose_name='所有权人')),
            ],
            options={
                'db_table': 'dbms_others',
                'verbose_name_plural': '权证-其他',
            },
        ),
        migrations.CreateModel(
            name='Ownership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ownership_num', models.CharField(max_length=32, unique=True, verbose_name='产权证编号')),
                ('ownership_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='owner_custome', to='A_dbms.Customes', verbose_name='所有权人')),
            ],
            options={
                'db_table': 'dbms_ownership',
                'verbose_name_plural': '权证-产权证',
            },
        ),
        migrations.CreateModel(
            name='Pigeonholes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('implement', models.IntegerField(choices=[(1, '未归档'), (11, '退回'), (21, '暂存风控'), (31, '移交行政'), (41, '已归档'), (99, '无需归档')], default=1, verbose_name='归档状态')),
                ('pigeonhole_date', models.DateField(default=datetime.date.today, verbose_name='归档日期')),
                ('pigeonhole_explain', models.CharField(blank=True, max_length=128, null=True, verbose_name='归档说明')),
            ],
            options={
                'db_table': 'dbms_pigeonholes',
                'verbose_name_plural': '放款-归档',
            },
        ),
        migrations.CreateModel(
            name='Provides',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provide_typ', models.IntegerField(choices=[(1, '流贷'), (11, '承兑'), (21, '保函'), (31, '委贷'), (41, '小贷')], verbose_name='放款种类')),
                ('old_amount', models.FloatField(default=0, verbose_name='续贷金额')),
                ('new_amount', models.FloatField(default=0, verbose_name='新增金额')),
                ('provide_money', models.FloatField(default=0, verbose_name='放款金额')),
                ('provide_date', models.DateField(verbose_name='放款日期')),
                ('due_date', models.DateField(verbose_name='到期日')),
                ('implement', models.IntegerField(choices=[(1, '未归档'), (11, '退回'), (21, '暂存风控'), (31, '移交行政'), (41, '已归档'), (99, '无需归档')], default=1, verbose_name='_归档状态')),
                ('file_num', models.CharField(blank=True, max_length=64, null=True, unique=True, verbose_name='档案编号')),
                ('provide_status', models.IntegerField(choices=[(1, '在保'), (11, '解保'), (21, '代偿')], default=1, verbose_name='_放款状态')),
                ('provide_repayment_sum', models.FloatField(default=0, verbose_name='_还款总额')),
                ('provide_balance', models.FloatField(default=0, verbose_name='_在保余额')),
                ('providordate', models.DateField(default=datetime.date.today, verbose_name='_创建日期')),
                ('notify', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='provide_notify', to='A_dbms.Notify', verbose_name='_放款通知')),
            ],
            options={
                'db_table': 'dbms_provides',
                'verbose_name_plural': '放款',
            },
        ),
        migrations.CreateModel(
            name='Receivable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receivable_detail', models.TextField(verbose_name='应收账款描述')),
                ('receivable_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_receivable',
                'verbose_name_plural': '权证-应收账款',
            },
        ),
        migrations.CreateModel(
            name='ReceiveExtend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receive_unit', models.CharField(max_length=64, verbose_name='应收单位名称')),
                ('receiv_e_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_receiveextend',
                'verbose_name_plural': '权证-应收明细',
            },
        ),
        migrations.CreateModel(
            name='Repayments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repayment_money', models.FloatField(verbose_name='还款金额')),
                ('repayment_date', models.DateField(default=datetime.date.today, verbose_name='还款日期')),
                ('repaymentdate', models.DateField(default=datetime.date.today, verbose_name='_创建日期')),
                ('provide', models.ForeignKey(limit_choices_to={'provide_status': 1}, on_delete=django.db.models.deletion.PROTECT, related_name='repayment_provide', to='A_dbms.Provides', verbose_name='放款')),
            ],
            options={
                'db_table': 'dbms_repayments',
                'verbose_name_plural': '项目-还款',
            },
        ),
        migrations.CreateModel(
            name='ResultState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_typ', models.IntegerField(choices=[(11, '股东会决议'), (13, '合伙人会议决议'), (15, '举办者会议决议'), (21, '董事会决议'), (23, '管委会决议'), (31, '声明书'), (41, '个人婚姻状况及财产申明')], verbose_name='决议类型')),
                ('result_detail', models.TextField(blank=True, null=True, verbose_name='决议声明内容')),
                ('result_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('agree', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='result_agree', to='A_dbms.Agrees', verbose_name='主合同')),
                ('custom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='result_custom', to='A_dbms.Customes', verbose_name='客户')),
            ],
            options={
                'db_table': 'dbms_resultstate',
                'verbose_name_plural': '合同-决议及声明',
                'ordering': ['-agree'],
            },
        ),
        migrations.CreateModel(
            name='Retrieve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('retrieve_type', models.IntegerField(choices=[(1, '诉讼前清收'), (11, '履行判决'), (21, '强制执行'), (31, '执行资产抵债'), (99, '其他回收方式')], verbose_name='回收类型')),
                ('retrieve_amount', models.FloatField(verbose_name='金额')),
                ('retrieve_date', models.DateField(verbose_name='回收日期')),
                ('retrieve_remark', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
                ('retrievor_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('dun', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='retrieve_dun', to='A_dbms.Dun', verbose_name='追偿项目')),
            ],
            options={
                'db_table': 'dbms_retrieve',
                'verbose_name_plural': '追偿-案款回收',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_plan_date', models.DateField(blank=True, null=True, verbose_name='保后计划')),
                ('review_state', models.IntegerField(choices=[(1, '待保后'), (11, '待报告'), (21, '已完成'), (81, '自主保后')], default=1, verbose_name='_保后状态')),
                ('review_sty', models.IntegerField(blank=True, choices=[(1, '现场检查'), (11, '电话回访'), (61, '补调替代'), (62, '尽调替代')], null=True, verbose_name='保后方式')),
                ('analysis', models.TextField(blank=True, null=True, verbose_name='风险分析')),
                ('suggestion', models.TextField(blank=True, null=True, verbose_name='风控建议')),
                ('classification', models.IntegerField(blank=True, choices=[(1, '正常'), (11, '关注'), (21, '次级'), (31, '可疑'), (41, '损失')], null=True, verbose_name='风险分类')),
                ('review_date', models.DateField(blank=True, null=True, verbose_name='保后日期')),
                ('custom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='review_custom', to='A_dbms.Customes', verbose_name='客户')),
            ],
            options={
                'db_table': 'dbms_review',
                'verbose_name_plural': '项目-保后检查',
            },
        ),
        migrations.CreateModel(
            name='Seal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seal_state', models.IntegerField(choices=[(1, '查询跟踪'), (3, '诉前保全'), (5, '首次首封'), (11, '首次轮封'), (21, '续查封'), (51, '解除查封'), (99, '注销')], default=1, verbose_name='查封状态')),
                ('seal_date', models.DateField(blank=True, null=True, verbose_name='_最近查封日')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='_查封到期日')),
                ('inquiry_date', models.DateField(blank=True, null=True, verbose_name='_最近查询日')),
                ('seal_remark', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
                ('sealor_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('dun', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='seal_dun', to='A_dbms.Dun', verbose_name='追偿项目')),
            ],
            options={
                'db_table': 'dbms_seal',
                'verbose_name_plural': '追偿-查封现状',
                'ordering': ['-seal_date'],
            },
        ),
        migrations.CreateModel(
            name='Sealup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sealup_type', models.IntegerField(choices=[(1, '查询跟踪'), (3, '诉前保全'), (5, '首次首封'), (11, '首次轮封'), (21, '续查封'), (51, '解除查封'), (99, '注销')], default=1, verbose_name='查封类型')),
                ('sealup_date', models.DateField(blank=True, null=True, verbose_name='查封日期')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='到期日')),
                ('sealup_remark', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
                ('sealupor_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('seal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sealup_seal', to='A_dbms.Seal', verbose_name='财产线索')),
            ],
            options={
                'db_table': 'dbms_sealup',
                'verbose_name_plural': '追偿-查封明细',
            },
        ),
        migrations.CreateModel(
            name='Shareholders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shareholder_name', models.CharField(max_length=32, verbose_name='股东名称')),
                ('invested_amount', models.FloatField(verbose_name='投资额')),
                ('shareholding_ratio', models.FloatField(verbose_name='持股比例（%）')),
                ('shareholder_date', models.DateField(default=datetime.date.today, verbose_name='创建时间')),
                ('custom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shareholder_custom_c', to='A_dbms.CustomesC', verbose_name='企业客户')),
            ],
            options={
                'db_table': 'dbms_shareholders',
                'verbose_name_plural': '客户-股东信息',
            },
        ),
        migrations.CreateModel(
            name='SingleQuota',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_model', models.IntegerField(choices=[(1, '流动资金贷款'), (2, '银行承兑汇票'), (3, '保函'), (4, '综合授信额度（含流贷、银承、保函）'), (31, '委托贷款'), (42, '小额贷款')], default=1, verbose_name='授信类型')),
                ('credit_amount', models.FloatField(verbose_name='授信额度（元）')),
                ('flow_rate', models.CharField(blank=True, max_length=128, null=True, verbose_name='费率')),
                ('single_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_single_quota',
                'verbose_name_plural': '评审-额度',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_name', models.CharField(max_length=64, unique=True, verbose_name='姓名')),
                ('staff_type', models.IntegerField(choices=[(1, '代理律师'), (11, '审判法官'), (21, '执行法官'), (31, '评估人员'), (41, '代理员工'), (51, '助拍人员'), (51, '竞拍人员'), (99, '其他人员')], verbose_name='人员类型')),
                ('contact_number', models.CharField(max_length=32, verbose_name='联系电话')),
                ('staff_remark', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
                ('staffor_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('dun', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='staff_dun', to='A_dbms.Dun', verbose_name='追偿项目')),
            ],
            options={
                'db_table': 'dbms_staff',
                'verbose_name_plural': '追偿-人员',
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage_type', models.IntegerField(choices=[(1, '证据及财产线索资料'), (11, '诉前资料'), (21, '一审资料'), (31, '上诉及再审'), (41, '案外之诉'), (51, '执行资料'), (99, '其他')], verbose_name='资料类型')),
                ('stage_state', models.IntegerField(choices=[(1, '原件'), (11, '复印件')], verbose_name='原件或复印件')),
                ('stage_file', models.CharField(max_length=64, verbose_name='文件')),
                ('stage_date', models.DateField(verbose_name='文件日期')),
                ('stage_remark', models.CharField(blank=True, max_length=64, null=True, verbose_name='索引号')),
                ('stagor_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('dun', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stage_dun', to='A_dbms.Dun', verbose_name='追偿项目')),
            ],
            options={
                'db_table': 'dbms_stage',
                'verbose_name_plural': '追偿-追偿阶段',
            },
        ),
        migrations.CreateModel(
            name='Standing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standing_detail', models.TextField(verbose_name='追偿情况')),
                ('standingor_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('dun', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='standing_dun', to='A_dbms.Dun', verbose_name='追偿项目')),
            ],
            options={
                'db_table': 'dbms_standing',
                'verbose_name_plural': '追偿-跟进台账',
            },
        ),
        migrations.CreateModel(
            name='Stockes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_typ', models.IntegerField(choices=[(1, '有限公司股权'), (11, '股份公司股份'), (21, '举办者权益')], default=1, verbose_name='股权性质')),
                ('target', models.CharField(max_length=64, verbose_name='标的公司')),
                ('ratio', models.FloatField(verbose_name='比例（%）')),
                ('registe', models.FloatField(default=0, verbose_name='认缴资本（万）')),
                ('share', models.FloatField(default=0, verbose_name='实缴资本（万）')),
                ('stock_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_stockes',
                'verbose_name_plural': '权证-股权',
            },
        ),
        migrations.CreateModel(
            name='Storages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_typ', models.IntegerField(choices=[(1, '入库'), (2, '续抵出库'), (6, '无需入库'), (11, '借出'), (12, '归还'), (31, '解保出库')], default=1, verbose_name='出入库')),
                ('storage_explain', models.CharField(blank=True, max_length=128, null=True, verbose_name='出入库说明')),
                ('storage_date', models.DateField(default=datetime.date.today, verbose_name='出入库日期')),
            ],
            options={
                'db_table': 'dbms_storages',
                'verbose_name_plural': '权证-出入库',
            },
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detail', models.TextField(verbose_name='补调问题')),
                ('supply_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('summary', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supply_summary', to='A_dbms.Articles', verbose_name='项目')),
            ],
            options={
                'db_table': 'dbms_supply',
                'verbose_name_plural': '评审-补调问题',
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_typ', models.IntegerField(choices=[(11, '日常跟踪'), (21, '分期还款'), (25, '分期付息'), (31, '提前还款')], default=11, verbose_name='跟踪类型')),
                ('plan_date', models.DateField(verbose_name='计划日期')),
                ('proceed', models.CharField(max_length=128, verbose_name='跟踪内容')),
                ('track_date', models.DateField(blank=True, null=True, verbose_name='跟踪日期')),
                ('condition', models.TextField(blank=True, null=True, verbose_name='跟踪情况')),
                ('track_state', models.IntegerField(choices=[(11, '待跟踪'), (21, '已跟踪')], default=11, verbose_name='_跟踪状态')),
                ('trackordate', models.DateField(default=datetime.date.today, verbose_name='_创建日期')),
                ('provide', models.ForeignKey(limit_choices_to={'provide_status': 1}, on_delete=django.db.models.deletion.PROTECT, related_name='track_provide', to='A_dbms.Provides', verbose_name='放款')),
            ],
            options={
                'db_table': 'dbms_track',
                'verbose_name_plural': '放款-跟踪',
                'ordering': ['plan_date'],
            },
        ),
        migrations.CreateModel(
            name='Trustee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trustee_name', models.CharField(max_length=32, unique=True, verbose_name='董事姓名')),
                ('trusteeor_date', models.DateField(default=datetime.date.today, verbose_name='创建时间')),
                ('custom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trustee_custom_c', to='A_dbms.CustomesC', verbose_name='企业客户')),
            ],
            options={
                'db_table': 'dbms_trustee',
                'verbose_name_plural': '客户-董事信息',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frame_num', models.CharField(max_length=64, unique=True, verbose_name='车架号')),
                ('plate_num', models.CharField(max_length=64, unique=True, verbose_name='车牌号')),
                ('vehicle_brand', models.CharField(max_length=64, verbose_name='品牌型号')),
                ('vehicle_remark', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
                ('vehicle_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_vehicle',
                'verbose_name_plural': '权证-车辆',
            },
        ),
        migrations.CreateModel(
            name='Warrants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warrant_num', models.CharField(max_length=128, unique=True, verbose_name='权证编码')),
                ('warrant_typ', models.IntegerField(choices=[(1, '房产'), (2, '房产包'), (5, '土地'), (6, '在建工程'), (11, '应收账款'), (21, '股权'), (31, '票据'), (41, '车辆'), (51, '动产'), (55, '其他'), (99, '他权')], default=1, verbose_name='权证类型')),
                ('evaluate_state', models.IntegerField(choices=[(0, '待评估'), (1, '机构评估'), (11, '机构预估'), (21, '综合询价'), (31, '购买成本'), (41, '拍卖评估'), (99, '无需评估')], default=0, verbose_name='评估方式')),
                ('evaluate_value', models.FloatField(blank=True, null=True, verbose_name='评估价值')),
                ('evaluate_date', models.DateField(blank=True, null=True, verbose_name='评估日期')),
                ('evaluate_explain', models.CharField(blank=True, max_length=128, null=True, verbose_name='评估说明')),
                ('meeting_date', models.DateField(blank=True, null=True, verbose_name='最近上会日')),
                ('warrant_state', models.IntegerField(choices=[(1, '未入库'), (2, '已入库'), (6, '无需入库'), (11, '续抵出库'), (21, '已借出'), (31, '解保出库'), (99, '已注销')], default=1, verbose_name='_权证状态')),
                ('storage_explain', models.CharField(blank=True, max_length=128, null=True, verbose_name='出入库说明')),
                ('inquiry_date', models.DateField(blank=True, null=True, verbose_name='最近查询日')),
                ('inquiry_detail', models.TextField(blank=True, null=True, verbose_name='查询情况')),
                ('auction_date', models.DateField(blank=True, null=True, verbose_name='拍卖日期')),
                ('listing_price', models.FloatField(blank=True, null=True, verbose_name='挂网价格')),
                ('auction_remark', models.CharField(blank=True, max_length=64, null=True, verbose_name='拍卖情况')),
                ('auction_state', models.IntegerField(choices=[(1, '正常'), (2, '查封'), (3, '评估'), (5, '挂网'), (11, '成交'), (21, '流拍'), (31, '回转'), (99, '注销')], default=1, verbose_name='_拍卖状态')),
                ('transaction_date', models.DateField(blank=True, null=True, verbose_name='成交日期')),
                ('auction_amount', models.FloatField(blank=True, null=True, verbose_name='成交金额')),
                ('warrant_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
            ],
            options={
                'db_table': 'dbms_warrants',
                'verbose_name_plural': '权证',
            },
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'E-mail已经存在！'}, max_length=150, unique=True, verbose_name='电子邮箱')),
                ('num', models.CharField(max_length=64, verbose_name='代码')),
                ('name', models.CharField(max_length=64, verbose_name='姓名')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('employee_status', models.IntegerField(choices=[(1, '在职'), (11, '离职')], default=1, verbose_name='_员工状态')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employee_department', to='A_dbms.Departments', verbose_name='部门')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('job', models.ManyToManyField(blank=True, null=True, to='A_dbms.Jobs')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': [('dbms_article_all', '访问项目列表'), ('dbms_article', '访问所有项目列表'), ('article_scan_all', '访问项目添加页'), ('article_scan_agree', '添加项目')],
                'db_table': 'dbms_employees',
                'verbose_name_plural': '内部-员工',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='warrants',
            name='warrant_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='warrant_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_custome', to='A_dbms.Customes', verbose_name='所有权人'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='warrant',
            field=models.OneToOneField(limit_choices_to={'warrant_typ': 41}, on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='trustee',
            name='trusteeor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='trusteeor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='track',
            name='trackor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='trackor_employee', to=settings.AUTH_USER_MODEL, verbose_name='_创建者'),
        ),
        migrations.AddField(
            model_name='supply',
            name='supplyor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplyor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='storages',
            name='conservator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conservator_employee', to=settings.AUTH_USER_MODEL, verbose_name='权证管理岗'),
        ),
        migrations.AddField(
            model_name='storages',
            name='transfer',
            field=models.ForeignKey(limit_choices_to={'employee_status': 1}, on_delete=django.db.models.deletion.PROTECT, related_name='transfer_employee', to=settings.AUTH_USER_MODEL, verbose_name='移交/接收者'),
        ),
        migrations.AddField(
            model_name='storages',
            name='warrant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='storage_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='stockes',
            name='stock_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='stock_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='stockes',
            name='stock_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stock_owner_custome', to='A_dbms.Customes', verbose_name='所有权人'),
        ),
        migrations.AddField(
            model_name='stockes',
            name='warrant',
            field=models.OneToOneField(limit_choices_to={'warrant_typ': 21}, on_delete=django.db.models.deletion.CASCADE, related_name='stock_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='standing',
            name='standingor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='standingor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='stage',
            name='stagor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stagor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='staff',
            name='staffor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='staffor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='singlequota',
            name='single_buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='single_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='singlequota',
            name='summary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='single_quota_summary', to='A_dbms.Articles', verbose_name='纪要'),
        ),
        migrations.AddField(
            model_name='shareholders',
            name='shareholderor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='shareholderor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='sealup',
            name='sealupor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sealup_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='seal',
            name='sealor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sealor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='seal',
            name='warrant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='seal_warrant', to='A_dbms.Warrants', verbose_name='财产'),
        ),
        migrations.AddField(
            model_name='review',
            name='reviewor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reviewor_employee', to=settings.AUTH_USER_MODEL, verbose_name='保后人员'),
        ),
        migrations.AddField(
            model_name='retrieve',
            name='retrievor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='retrievor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='resultstate',
            name='resultor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='resultor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='repayments',
            name='repaymentor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='repaymentor_employee', to=settings.AUTH_USER_MODEL, verbose_name='_创建者'),
        ),
        migrations.AddField(
            model_name='receiveextend',
            name='receiv_e_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='receiv_e_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='receiveextend',
            name='receivable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extend_receiveable', to='A_dbms.Receivable', verbose_name='应收账款'),
        ),
        migrations.AddField(
            model_name='receivable',
            name='receivable_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='receivable_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='receivable',
            name='receive_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='receive_custome', to='A_dbms.Customes', verbose_name='所有权人'),
        ),
        migrations.AddField(
            model_name='receivable',
            name='warrant',
            field=models.OneToOneField(limit_choices_to={'warrant_typ': 11}, on_delete=django.db.models.deletion.CASCADE, related_name='receive_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='provides',
            name='providor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='providor_employee', to=settings.AUTH_USER_MODEL, verbose_name='_创建者'),
        ),
        migrations.AddField(
            model_name='pigeonholes',
            name='pigeonhole_transfer',
            field=models.ForeignKey(limit_choices_to={'employee_status': 1}, on_delete=django.db.models.deletion.PROTECT, related_name='pigeonhole_transfer_employee', to=settings.AUTH_USER_MODEL, verbose_name='移交人'),
        ),
        migrations.AddField(
            model_name='pigeonholes',
            name='pigeonholor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pigeonholor_employee', to=settings.AUTH_USER_MODEL, verbose_name='_创建者'),
        ),
        migrations.AddField(
            model_name='pigeonholes',
            name='provide',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pigeonhole_provide', to='A_dbms.Provides', verbose_name='放款'),
        ),
        migrations.AddField(
            model_name='ownership',
            name='ownership_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='ownership_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='ownership',
            name='warrant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ownership_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='others',
            name='otheror',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='otheror_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='others',
            name='warrant',
            field=models.OneToOneField(limit_choices_to={'warrant_typ': 55}, on_delete=django.db.models.deletion.CASCADE, related_name='other_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='notify',
            name='notifyor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='notifyor_employee', to=settings.AUTH_USER_MODEL, verbose_name='_创建者'),
        ),
        migrations.AddField(
            model_name='lendingwarrants',
            name='lending_w_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='lending_w_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='lendingwarrants',
            name='sure',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='warrant_sure', to='A_dbms.LendingSures', verbose_name='反担保措施'),
        ),
        migrations.AddField(
            model_name='lendingwarrants',
            name='warrant',
            field=models.ManyToManyField(related_name='lending_warrant', to='A_dbms.Warrants', verbose_name='抵质押物'),
        ),
        migrations.AddField(
            model_name='lendingsures',
            name='sure_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='sure_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='lendingorder',
            name='lending_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='lending_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='lendingorder',
            name='summary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lending_summary', to='A_dbms.Articles', verbose_name='项目纪要'),
        ),
        migrations.AddField(
            model_name='lendingcustoms',
            name='lending_c_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='lending_c_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='lendingcustoms',
            name='sure',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='custom_sure', to='A_dbms.LendingSures', verbose_name='反担保措施'),
        ),
        migrations.AddField(
            model_name='judgment',
            name='judgmentor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='judgmentor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='investigate',
            name='invor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invor_employee', to=settings.AUTH_USER_MODEL, verbose_name='补调人员'),
        ),
        migrations.AddField(
            model_name='inquiry',
            name='inquiryor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inquiryor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='inquiry',
            name='seal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inquiry_seal', to='A_dbms.Seal', verbose_name='财产线索'),
        ),
        migrations.AddField(
            model_name='hypothecs',
            name='hypothec_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='hypothec_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='hypothecs',
            name='warrant',
            field=models.OneToOneField(limit_choices_to={'warrant_typ': 99}, on_delete=django.db.models.deletion.CASCADE, related_name='ypothec_warrant', to='A_dbms.Warrants', verbose_name='他权证'),
        ),
        migrations.AddField(
            model_name='hypothecs',
            name='warrant_m',
            field=models.ManyToManyField(related_name='ypothec_m_agree', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='houses',
            name='house_buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='house_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='houses',
            name='warrant',
            field=models.OneToOneField(limit_choices_to={'warrant_typ': 1}, on_delete=django.db.models.deletion.CASCADE, related_name='house_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='housebag',
            name='housebag_buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='housebag_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='housebag',
            name='warrant',
            field=models.ForeignKey(limit_choices_to={'warrant_typ': 2}, on_delete=django.db.models.deletion.CASCADE, related_name='housebag_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='grounds',
            name='ground_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='ground_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='grounds',
            name='warrant',
            field=models.OneToOneField(limit_choices_to={'warrant_typ': 5}, on_delete=django.db.models.deletion.CASCADE, related_name='ground_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='feedback_buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='feedback_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='experts',
            name='expertor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='expertor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='evaluate',
            name='evaluator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaluator_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='evaluate',
            name='warrant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaluate_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='dun',
            name='dunor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dunor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='dun',
            name='warrant',
            field=models.ManyToManyField(blank=True, null=True, related_name='dun_warrant', to='A_dbms.Warrants', verbose_name='资产线索'),
        ),
        migrations.AddField(
            model_name='draftextend',
            name='draft_e_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='draft_e_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='draft',
            name='draft_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='draft_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='draft',
            name='draft_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='draft_custome', to='A_dbms.Customes', verbose_name='所有权人'),
        ),
        migrations.AddField(
            model_name='draft',
            name='warrant',
            field=models.OneToOneField(limit_choices_to={'warrant_typ': 31}, on_delete=django.db.models.deletion.CASCADE, related_name='draft_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='customesc',
            name='district',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='custome_district', to='A_dbms.Districtes', verbose_name='所属区域'),
        ),
        migrations.AddField(
            model_name='customesc',
            name='idustry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='custome_idustry', to='A_dbms.Industries', verbose_name='所属行业'),
        ),
        migrations.AddField(
            model_name='customes',
            name='custom_buildor',
            field=models.ForeignKey(default=28, on_delete=django.db.models.deletion.PROTECT, related_name='custom_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='_创建者'),
        ),
        migrations.AddField(
            model_name='customes',
            name='district',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='c_district', to='A_dbms.Districtes', verbose_name='所属区域'),
        ),
        migrations.AddField(
            model_name='customes',
            name='idustry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='c_idustry', to='A_dbms.Industries', verbose_name='所属行业'),
        ),
        migrations.AddField(
            model_name='customes',
            name='managementor',
            field=models.ForeignKey(default=28, on_delete=django.db.models.deletion.PROTECT, related_name='manage_employee', to=settings.AUTH_USER_MODEL, verbose_name='管护经理'),
        ),
        migrations.AddField(
            model_name='counterswarrants',
            name='counter_warrant_buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='counter_warrantor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='counterswarrants',
            name='warrant',
            field=models.ManyToManyField(related_name='counter_warrant', to='A_dbms.Warrants', verbose_name='抵质押物'),
        ),
        migrations.AddField(
            model_name='countersassure',
            name='counter_assure_buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='counter_assureor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='countersassure',
            name='custome',
            field=models.ManyToManyField(related_name='counter_custome', to='A_dbms.Customes', verbose_name='反担保人'),
        ),
        migrations.AddField(
            model_name='counters',
            name='counter_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='counteror_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='cooperators',
            name='cooperat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cooperat_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='construction',
            name='coustructor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='coustructor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='construction',
            name='warrant',
            field=models.OneToOneField(limit_choices_to={'warrant_typ': 6}, on_delete=django.db.models.deletion.CASCADE, related_name='coustruct_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='compensatories',
            name='compensator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='compensator_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='compensatories',
            name='provide',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='compensatory_provide', to='A_dbms.Provides', verbose_name='放款'),
        ),
        migrations.AddField(
            model_name='comments',
            name='comment_buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comment_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='comments',
            name='expert',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comment_expert', to='A_dbms.Experts', verbose_name='评委'),
        ),
        migrations.AddField(
            model_name='comments',
            name='summary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comment_summary', to='A_dbms.Articles', verbose_name='纪要'),
        ),
        migrations.AddField(
            model_name='chattel',
            name='chattel_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='chattel_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='chattel',
            name='chattel_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='chattel_custome', to='A_dbms.Customes', verbose_name='所有权人'),
        ),
        migrations.AddField(
            model_name='chattel',
            name='warrant',
            field=models.OneToOneField(limit_choices_to={'warrant_typ': 51}, on_delete=django.db.models.deletion.CASCADE, related_name='chattel_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='charges',
            name='charge_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='charge_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='charge',
            name='chargor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='chargor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='charge',
            name='dun',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='charge_dun', to='A_dbms.Dun', verbose_name='追偿项目'),
        ),
        migrations.AddField(
            model_name='branches',
            name='branchor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='branchor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='branches',
            name='cooperator',
            field=models.ForeignKey(limit_choices_to={'cooperator_state': 1}, on_delete=django.db.models.deletion.CASCADE, related_name='branch_cooperator', to='A_dbms.Cooperators', verbose_name='授信银行'),
        ),
        migrations.AddField(
            model_name='authorities',
            name='carte',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='authority_carte', to='A_dbms.Cartes', verbose_name='菜单'),
        ),
        migrations.AddField(
            model_name='articles',
            name='article_buildor',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='article_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='_创建者'),
        ),
        migrations.AddField(
            model_name='articles',
            name='assistant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assistant_employee', to=settings.AUTH_USER_MODEL, verbose_name='项目助理'),
        ),
        migrations.AddField(
            model_name='articles',
            name='control',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='control_employee', to=settings.AUTH_USER_MODEL, verbose_name='风控专员'),
        ),
        migrations.AddField(
            model_name='articles',
            name='custom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='article_custom', to='A_dbms.Customes', verbose_name='客户'),
        ),
        migrations.AddField(
            model_name='articles',
            name='director',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='director_employee', to=settings.AUTH_USER_MODEL, verbose_name='项目经理'),
        ),
        migrations.AddField(
            model_name='articles',
            name='expert',
            field=models.ManyToManyField(related_name='article_expert', to='A_dbms.Experts', verbose_name='评审委员'),
        ),
        migrations.AddField(
            model_name='articlechange',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='change_article', to='A_dbms.Articles', verbose_name='项目'),
        ),
        migrations.AddField(
            model_name='articlechange',
            name='change_buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='change_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='appraisals',
            name='article',
            field=models.ManyToManyField(blank=True, null=True, related_name='appraisal_article', to='A_dbms.Articles', verbose_name='参评项目'),
        ),
        migrations.AddField(
            model_name='appraisals',
            name='compere',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='compere_employee', to=settings.AUTH_USER_MODEL, verbose_name='主持人'),
        ),
        migrations.AddField(
            model_name='appraisals',
            name='meeting_buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='meeting_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='agrees',
            name='agree_buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agree_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='agrees',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agree_branch', to='A_dbms.Branches', verbose_name='放款银行'),
        ),
        migrations.AddField(
            model_name='agrees',
            name='lending',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agree_lending', to='A_dbms.LendingOrder', verbose_name='放款纪要'),
        ),
        migrations.AddField(
            model_name='agreements',
            name='agreementor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agreementor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='agreements',
            name='cooperator',
            field=models.ForeignKey(limit_choices_to={'cooperator_state': 1}, on_delete=django.db.models.deletion.CASCADE, related_name='agreement_cooperator', to='A_dbms.Cooperators', verbose_name='合作机构'),
        ),
        migrations.AddField(
            model_name='agent',
            name='agentor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agentor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='agent',
            name='dun',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agent_dun', to='A_dbms.Dun', verbose_name='追偿项目'),
        ),
        migrations.AlterUniqueTogether(
            name='trustee',
            unique_together={('custom', 'trustee_name')},
        ),
        migrations.AlterUniqueTogether(
            name='singlequota',
            unique_together={('summary', 'credit_model')},
        ),
        migrations.AlterUniqueTogether(
            name='shareholders',
            unique_together={('custom', 'shareholder_name')},
        ),
        migrations.AlterUniqueTogether(
            name='seal',
            unique_together={('dun', 'warrant')},
        ),
        migrations.AlterUniqueTogether(
            name='resultstate',
            unique_together={('agree', 'custom', 'result_typ')},
        ),
        migrations.AlterUniqueTogether(
            name='receiveextend',
            unique_together={('receivable', 'receive_unit')},
        ),
        migrations.AlterUniqueTogether(
            name='ownership',
            unique_together={('warrant', 'owner')},
        ),
        migrations.AlterUniqueTogether(
            name='lendingorder',
            unique_together={('summary', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='comments',
            unique_together={('summary', 'expert')},
        ),
        migrations.AlterUniqueTogether(
            name='branches',
            unique_together={('name', 'cooperator')},
        ),
        migrations.AlterUniqueTogether(
            name='authorities',
            unique_together={('name', 'url_name')},
        ),
    ]
