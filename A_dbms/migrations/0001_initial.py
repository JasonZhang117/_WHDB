# Generated by Django 2.1.3 on 2018-12-09 05:31

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgreeesExtend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_addr', models.CharField(max_length=64, verbose_name='联系地址')),
                ('linkman', models.CharField(max_length=16, verbose_name='联系人')),
                ('contact_num', models.CharField(max_length=13, verbose_name='联系电话')),
                ('registered_addr', models.CharField(blank=True, max_length=64, null=True, verbose_name='注册地址')),
                ('representative', models.CharField(blank=True, max_length=16, null=True, verbose_name='法人代表')),
                ('license_num', models.CharField(blank=True, max_length=18, null=True, verbose_name='身份证号码')),
            ],
        ),
        migrations.CreateModel(
            name='Agrees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agree_num', models.CharField(max_length=32, unique=True, verbose_name='_合同编号')),
                ('num_prefix', models.CharField(max_length=32, verbose_name='_编号前缀')),
                ('agree_typ', models.IntegerField(choices=[(1, '单笔'), (2, '最高额'), (3, '保函')], verbose_name='合同种类')),
                ('guarantee_typ', models.CharField(choices=[('②', '②'), ('③', '③'), ('④', '④'), ('⑤', '⑤'), ('⑥', '⑥'), ('⑦', '⑦')], max_length=4, verbose_name='反担保种类数')),
                ('agree_copies', models.IntegerField(verbose_name='合同份数')),
                ('agree_amount', models.FloatField(verbose_name='合同金额')),
                ('agree_date', models.DateField(default=datetime.date.today, verbose_name='创建日期')),
                ('agree_state', models.IntegerField(choices=[(1, '待签批'), (2, '已签批'), (3, '已落实'), (4, '已放款'), (5, '已解保'), (6, '已作废')], default=1, verbose_name='_合同状态')),
                ('agree_balance', models.FloatField(default=0, verbose_name='_放款金额（元）')),
                ('charge', models.FloatField(default=0, verbose_name='应收保费（元）')),
            ],
            options={
                'db_table': 'dbms_agrees',
                'verbose_name_plural': '合同-委托保证',
            },
        ),
        migrations.CreateModel(
            name='Appraisals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.CharField(max_length=32, unique=True, verbose_name='评审会编号')),
                ('review_year', models.IntegerField(default=2018, verbose_name='评审年份')),
                ('review_order', models.IntegerField(verbose_name='评审次序')),
                ('review_model', models.IntegerField(choices=[(1, '内审'), (2, '外审')], verbose_name='评审类型')),
                ('review_date', models.DateField(default=datetime.date.today, verbose_name='评审日期')),
                ('meeting_state', models.IntegerField(choices=[(1, '待上会'), (2, '已上会')], default=1, verbose_name='项目状态')),
            ],
            options={
                'db_table': 'dbms_appraisals',
                'verbose_name_plural': '评审-审保会',
            },
        ),
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_num', models.CharField(max_length=32, unique=True, verbose_name='_项目编号')),
                ('renewal', models.FloatField(blank=True, null=True, verbose_name='续贷金额（元）')),
                ('augment', models.FloatField(blank=True, null=True, verbose_name='新增金额（元）')),
                ('amount', models.FloatField(blank=True, null=True, verbose_name='_总额度（元）')),
                ('credit_term', models.IntegerField(default=12, verbose_name='授信期限（月）')),
                ('article_date', models.DateField(default=datetime.date.today, verbose_name='反馈日期')),
                ('article_state', models.IntegerField(choices=[(1, '待反馈'), (2, '已反馈'), (3, '待上会'), (4, '已上会'), (5, '已签批'), (6, '已注销')], default=1, verbose_name='项目状态')),
                ('summary_num', models.CharField(blank=True, max_length=32, null=True, unique=True, verbose_name='_纪要编号')),
                ('sign_type', models.IntegerField(blank=True, choices=[(1, '同意'), (2, '不同意')], null=True, verbose_name='签批结论')),
                ('sign_detail', models.TextField(blank=True, null=True, verbose_name='签批意见')),
                ('sign_date', models.DateField(blank=True, null=True, verbose_name='签批日期')),
            ],
            options={
                'db_table': 'dbms_articles',
                'verbose_name_plural': '项目-项目',
            },
        ),
        migrations.CreateModel(
            name='Branches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='放款银行')),
                ('institution_code', models.CharField(max_length=32, unique=True, verbose_name='金融机构代码')),
                ('branch_state', models.IntegerField(choices=[(1, '正常'), (2, '注销')], default=1, verbose_name='银行状态')),
            ],
            options={
                'db_table': 'dbms_branchess',
                'verbose_name_plural': '外部-放款银行',
            },
        ),
        migrations.CreateModel(
            name='Charges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(verbose_name='收费金额')),
                ('charge_date', models.DateField(default=datetime.date.today, verbose_name='收费日期')),
                ('balance', models.FloatField(verbose_name='应收余额')),
                ('agree', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='charge_agree', to='A_dbms.Agrees', verbose_name='委托合同')),
            ],
            options={
                'db_table': 'dbms_charges',
                'verbose_name_plural': '放款-收费',
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_type', models.IntegerField(choices=[(0, '------'), (1, '同意'), (2, '复议'), (3, '不同意')], default=1, verbose_name='评委意见')),
                ('concrete', models.TextField(blank=True, null=True, verbose_name='意见详情')),
            ],
            options={
                'db_table': 'dbms_comments',
                'verbose_name_plural': '评审-意见',
            },
        ),
        migrations.CreateModel(
            name='Compensatories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compensatory_date', models.DateField(default='2018-09-09', verbose_name='代偿日期')),
                ('compensatory_capital', models.FloatField(default=0, verbose_name='代偿本金')),
                ('compensatory_interest', models.FloatField(default=0, verbose_name='代偿利息')),
                ('retrieve_amount', models.FloatField(default=0, verbose_name='追偿总额')),
                ('compensatory_implement', models.IntegerField(choices=[(1, '起诉'), (2, '判决'), (3, '执行'), (4, '和解结案'), (5, '终止执行')], default=1, verbose_name='归档状态')),
            ],
            options={
                'db_table': 'dbms_compensatories',
                'verbose_name_plural': '项目-代偿',
            },
        ),
        migrations.CreateModel(
            name='Cooperators',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='授信银行')),
                ('short_name', models.CharField(max_length=32, unique=True, verbose_name='银行简称')),
                ('flow_credit', models.FloatField(default=100000000, verbose_name='流贷&承兑额度')),
                ('flow_limit', models.FloatField(default=10000000, verbose_name='流贷&承兑单笔限额')),
                ('back_credit', models.FloatField(default=0, verbose_name='保函额度')),
                ('back_limit', models.FloatField(default=0, verbose_name='保函单笔限额')),
                ('credit_date', models.DateField(default=datetime.date.today, verbose_name='授信日期')),
                ('flow_used', models.FloatField(default=0, verbose_name='流贷&承兑占用额度')),
                ('flow_loan', models.FloatField(default=0, verbose_name='流贷&承兑放款额度')),
                ('back_used', models.FloatField(default=0, verbose_name='保函占用额度')),
                ('back_loan', models.FloatField(default=0, verbose_name='保函放款额度')),
            ],
            options={
                'db_table': 'dbms_cooperators',
                'verbose_name_plural': '外部-授信银行',
            },
        ),
        migrations.CreateModel(
            name='Counters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counter_num', models.CharField(max_length=32, unique=True, verbose_name='_合同编号')),
                ('counter_typ', models.IntegerField(choices=[(1, '企业担保'), (2, '个人担保'), (3, '房产抵押'), (4, '土地抵押'), (5, '应收质押'), (6, '动产抵押'), (7, '车辆抵押')], default=1, verbose_name='合同类型')),
                ('counter_state', models.IntegerField(choices=[(1, '未签订'), (2, '已签订'), (3, '已注销')], default=1, verbose_name='_签订情况')),
                ('agree', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='counter_agree', to='A_dbms.Agrees', verbose_name='委托保证合同')),
            ],
            options={
                'db_table': 'dbms_counters',
                'verbose_name_plural': '合同-反担保',
            },
        ),
        migrations.CreateModel(
            name='CountersAssure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counter', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='assure_counter', to='A_dbms.Counters', verbose_name='反担保合同')),
            ],
            options={
                'db_table': 'dbms_countersassure',
                'verbose_name_plural': '合同-保证反担保',
            },
        ),
        migrations.CreateModel(
            name='CountersHouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counter', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='house_counter', to='A_dbms.Counters', verbose_name='反担保合同')),
            ],
            options={
                'db_table': 'dbms_countershouse',
                'verbose_name_plural': '合同-房产抵押',
            },
        ),
        migrations.CreateModel(
            name='Customes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='名称')),
                ('genre', models.IntegerField(choices=[(1, '企业'), (2, '个人')], default=1, verbose_name='客户类型')),
                ('contact_addr', models.CharField(max_length=64, verbose_name='联系地址')),
                ('linkman', models.CharField(max_length=16, verbose_name='联系人')),
                ('contact_num', models.CharField(max_length=13, verbose_name='联系电话')),
                ('credit_amount', models.FloatField(default=0, verbose_name='授信总额（元）')),
                ('flow_loan', models.FloatField(default=0, verbose_name='流贷余额（元）')),
                ('accept_loan', models.FloatField(default=0, verbose_name='承兑余额（元）')),
                ('back_loan', models.FloatField(default=0, verbose_name='保函余额（元）')),
            ],
            options={
                'db_table': 'dbms_customes',
                'verbose_name_plural': '客户',
            },
        ),
        migrations.CreateModel(
            name='CustomesC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_num', models.CharField(max_length=18, unique=True, verbose_name='信用编码')),
                ('short_name', models.CharField(max_length=8, unique=True, verbose_name='简称')),
                ('registered_addr', models.CharField(max_length=64, verbose_name='注册地址')),
                ('representative', models.CharField(max_length=16, verbose_name='法人代表')),
                ('custome', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='company_custome', to='A_dbms.Customes', verbose_name='企业客户')),
            ],
            options={
                'db_table': 'dbms_customesc',
                'verbose_name_plural': '客户-企业',
            },
        ),
        migrations.CreateModel(
            name='CustomesP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_num', models.CharField(max_length=18, unique=True, verbose_name='身份证号码')),
                ('registered_addr', models.CharField(max_length=64, verbose_name='身份证地址')),
                ('custome', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='person_custome', to='A_dbms.Customes', verbose_name='个人客户')),
            ],
            options={
                'db_table': 'dbms_customesp',
                'verbose_name_plural': '客户-个人',
            },
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, unique=True, verbose_name='部门名称')),
            ],
            options={
                'db_table': 'dbms_departments',
                'verbose_name_plural': '内部-部门',
            },
        ),
        migrations.CreateModel(
            name='Districtes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, unique=True, verbose_name='街道名称')),
            ],
            options={
                'db_table': 'dbms_districtes',
                'verbose_name_plural': '客户-区域',
            },
        ),
        migrations.CreateModel(
            name='Evaluate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluate_value', models.FloatField(verbose_name='评估价值')),
                ('evaluate_date', models.DateField(default=datetime.date.today, verbose_name='评估日期')),
            ],
            options={
                'db_table': 'dbms_evaluate',
                'verbose_name_plural': '反担保-评估',
            },
        ),
        migrations.CreateModel(
            name='Experts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='评审姓名')),
                ('organization', models.CharField(max_length=32, verbose_name='工作单位')),
                ('job', models.CharField(max_length=16, null=True, verbose_name='职务')),
                ('level', models.IntegerField(choices=[(0, '内部'), (1, '一级'), (2, '二级')], default=1, verbose_name='级别')),
                ('contact_numb', models.CharField(max_length=16, unique=True, verbose_name='联系电话')),
                ('email', models.CharField(max_length=32, unique=True, verbose_name='邮箱')),
                ('ordery', models.IntegerField(verbose_name='优先级')),
                ('expert_state', models.IntegerField(choices=[(1, '正常'), (2, '注销')], default=1, verbose_name='评审状态')),
            ],
            options={
                'db_table': 'dbms_experts',
                'verbose_name_plural': '外部-评审专家',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('propose', models.IntegerField(choices=[(0, '--------------'), (1, '符合上会条件'), (2, '暂不符合上会条件'), (3, '建议终止项目')], default=0, verbose_name='上会建议')),
                ('analysis', models.TextField(verbose_name='风险分析')),
                ('suggestion', models.TextField(verbose_name='风控意见')),
                ('feedback_date', models.DateField(default=datetime.date.today, verbose_name='提交日期')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='feedback_article', to='A_dbms.Articles', verbose_name='项目')),
            ],
            options={
                'db_table': 'dbms_feedback',
                'verbose_name_plural': '项目-反馈',
            },
        ),
        migrations.CreateModel(
            name='Grounds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ground_locate', models.CharField(max_length=64, verbose_name='坐落')),
                ('application', models.IntegerField(choices=[(1, '住宅用地'), (2, '商服用地'), (3, '工业用地')], default=1, verbose_name='用途')),
                ('area_structure', models.FloatField(verbose_name='面积')),
            ],
            options={
                'db_table': 'dbms_grounds',
                'verbose_name_plural': '反担保-土地',
            },
        ),
        migrations.CreateModel(
            name='Houses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_locate', models.CharField(max_length=64, verbose_name='坐落')),
                ('application', models.IntegerField(choices=[(1, '住宅'), (2, '商业'), (3, '办公'), (4, '公寓'), (5, '厂房'), (6, '非生产性工业科研用房')], default=1, verbose_name='用途')),
                ('area_structure', models.FloatField(verbose_name='建筑面积')),
            ],
            options={
                'db_table': 'dbms_houses',
                'verbose_name_plural': '反担保-房产',
            },
        ),
        migrations.CreateModel(
            name='Hypothecs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agree', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ypothec_agree', to='A_dbms.Agrees', verbose_name='合同')),
            ],
            options={
                'db_table': 'dbms_hypothecs',
                'verbose_name_plural': '反担保-他权',
            },
        ),
        migrations.CreateModel(
            name='Industries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16, unique=True, verbose_name='行业编码')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='行业名称')),
            ],
            options={
                'db_table': 'dbms_industriess',
                'verbose_name_plural': '客户-行业',
            },
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, unique=True, verbose_name='岗位名称')),
            ],
            options={
                'db_table': 'dbms_jobs',
                'verbose_name_plural': '内部-岗位',
            },
        ),
        migrations.CreateModel(
            name='Menus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('url_name', models.CharField(max_length=128)),
                ('ordery', models.IntegerField()),
            ],
            options={
                'db_table': 'dbms_menus',
                'verbose_name_plural': '内部-动态菜单',
            },
        ),
        migrations.CreateModel(
            name='Ownership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ownership_num', models.CharField(max_length=32, unique=True, verbose_name='产权证编号')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='owner_custome', to='A_dbms.Customes', verbose_name='所有权人')),
            ],
            options={
                'db_table': 'dbms_ownership',
                'verbose_name_plural': '反担保-产权证',
            },
        ),
        migrations.CreateModel(
            name='Pigeonholes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pigeonhole_date', models.DateField(default=datetime.date.today, verbose_name='归档日期')),
            ],
            options={
                'db_table': 'dbms_pigeonholes',
                'verbose_name_plural': '项目-归档',
            },
        ),
        migrations.CreateModel(
            name='Provides',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provide_typ', models.IntegerField(choices=[(1, '流贷'), (2, '承兑'), (3, '保函')], default=1, verbose_name='放款种类')),
                ('provide_money', models.FloatField(verbose_name='放款金额')),
                ('provide_date', models.DateField(default=datetime.date.today, verbose_name='放款日期')),
                ('due_date', models.DateField(default=datetime.date.today, verbose_name='到期日')),
                ('provide_balance', models.FloatField(verbose_name='余额')),
                ('implement', models.IntegerField(choices=[(1, '未归档'), (2, '暂存风控'), (3, '已归档')], default=1, verbose_name='归档状态')),
                ('status', models.IntegerField(choices=[(1, '在保'), (2, '解保'), (3, '代偿')], default=1, verbose_name='项目状态')),
                ('agree', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='provide_agree', to='A_dbms.Agrees', verbose_name='委托保证合同')),
            ],
            options={
                'db_table': 'dbms_provides',
                'verbose_name_plural': '项目-放款',
            },
        ),
        migrations.CreateModel(
            name='Repayments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repayment_money', models.FloatField(verbose_name='还款金额')),
                ('repayment_date', models.DateField(default=datetime.date.today, verbose_name='还款日期')),
                ('provide', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='repayment_provide', to='A_dbms.Provides', verbose_name='放款')),
            ],
            options={
                'db_table': 'dbms_repayments',
                'verbose_name_plural': '项目-还款',
            },
        ),
        migrations.CreateModel(
            name='SingleQuota',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_model', models.IntegerField(choices=[(1, '流贷'), (2, '承兑'), (3, '保函'), (4, '综合')], default=1, verbose_name='授信类型')),
                ('credit_amount', models.FloatField(verbose_name='授信额度（元）')),
                ('flow_rate', models.FloatField(verbose_name='费率（%）')),
                ('amount', models.FloatField(default=0, verbose_name='_放款金额（元）')),
            ],
            options={
                'db_table': 'dbms_single_quota',
                'verbose_name_plural': '评审-额度',
            },
        ),
        migrations.CreateModel(
            name='Storages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_typ', models.IntegerField(choices=[(1, '入库'), (2, '出库'), (3, '借出'), (4, '归还')], default=1, verbose_name='出入库')),
                ('storage_date', models.DateField(default=datetime.date.today, verbose_name='日期')),
            ],
            options={
                'db_table': 'dbms_storages',
                'verbose_name_plural': '反担保-出入库',
            },
        ),
        migrations.CreateModel(
            name='Warrants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warrant_num', models.CharField(max_length=32, unique=True, verbose_name='担保物')),
                ('warrant_typ', models.IntegerField(choices=[(1, '房产'), (2, '土地'), (3, '车辆'), (4, '设备'), (5, '存货'), (6, '权利'), (7, '他权')], default=1, verbose_name='权证类型')),
                ('evaluate_value', models.FloatField(null=True, verbose_name='评估价值')),
                ('evaluate_date', models.DateField(null=True, verbose_name='评估日期')),
                ('warrant_state', models.IntegerField(choices=[(1, '未入库'), (2, '已入库'), (3, '已出库'), (4, '已借出'), (5, '已归还'), (6, '已注销')], default=1, verbose_name='_签订情况')),
            ],
            options={
                'db_table': 'dbms_warrants',
                'verbose_name_plural': '反担保-权证',
            },
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'email already exists.'}, max_length=150, unique=True, verbose_name='电子邮箱')),
                ('num', models.CharField(max_length=64, verbose_name='代码')),
                ('name', models.CharField(max_length=64, verbose_name='姓名')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='employee_department', to='A_dbms.Departments', verbose_name='部门')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('job', models.ManyToManyField(blank=True, null=True, to='A_dbms.Jobs')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'dbms_employees',
                'permissions': (('dbms_article_list', '访问项目列表'), ('dbms_article_list_all', '访问所有项目列表'), ('dbms_article_add_view', '访问项目添加页'), ('dbms_article_add_change', '添加项目'), ('crm_table_list', '可以查看kingadmin每张表里所有的数据'), ('crm_table_list_view', '可以访问kingadmin表里每条数据的修改页'), ('crm_table_list_change', '可以对kingadmin表里的每条数据进行修改'), ('crm_table_obj_add_view', '可以访问kingadmin每张表的数据增加页'), ('crm_table_obj_add', '可以对kingadmin每张表进行数据添加')),
                'verbose_name_plural': '内部-员工',
            },
        ),
        migrations.AddField(
            model_name='storages',
            name='warrant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='storage_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='singlequota',
            name='single_buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='single_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='singlequota',
            name='summary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='single_quota_summary', to='A_dbms.Articles', verbose_name='纪要'),
        ),
        migrations.AddField(
            model_name='pigeonholes',
            name='provide',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='pigeonhole_provide', to='A_dbms.Provides', verbose_name='放款'),
        ),
        migrations.AddField(
            model_name='ownership',
            name='warrant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ownership_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AlterUniqueTogether(
            name='menus',
            unique_together={('name', 'url_name')},
        ),
        migrations.AddField(
            model_name='jobs',
            name='menu',
            field=models.ManyToManyField(blank=True, to='A_dbms.Menus', verbose_name='菜单'),
        ),
        migrations.AddField(
            model_name='hypothecs',
            name='warrant',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='ypothec_warrant', to='A_dbms.Warrants', verbose_name='他权证'),
        ),
        migrations.AddField(
            model_name='hypothecs',
            name='warrant_m',
            field=models.ManyToManyField(related_name='ypothec_m_agree', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='houses',
            name='warrant',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='house_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='grounds',
            name='warrant',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='ground_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='feedback_buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='feedback_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='evaluate',
            name='warrant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='evaluate_warrant', to='A_dbms.Warrants', verbose_name='权证'),
        ),
        migrations.AddField(
            model_name='customesc',
            name='district',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custome_district', to='A_dbms.Districtes', verbose_name='所属区域'),
        ),
        migrations.AddField(
            model_name='customesc',
            name='idustry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='custome_idustry', to='A_dbms.Industries', verbose_name='所属行业'),
        ),
        migrations.AddField(
            model_name='countershouse',
            name='house',
            field=models.ManyToManyField(related_name='house_house', to='A_dbms.Houses', verbose_name='抵押物'),
        ),
        migrations.AddField(
            model_name='countersassure',
            name='custome',
            field=models.ManyToManyField(related_name='assure_custome', to='A_dbms.Customes', verbose_name='反担保人'),
        ),
        migrations.AddField(
            model_name='compensatories',
            name='provide',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='compensatory_provide', to='A_dbms.Provides', verbose_name='放款'),
        ),
        migrations.AddField(
            model_name='comments',
            name='comment_buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comment_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='comments',
            name='expert',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comment_expert', to='A_dbms.Experts', verbose_name='评委'),
        ),
        migrations.AddField(
            model_name='comments',
            name='summary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comment_summary', to='A_dbms.Articles', verbose_name='纪要'),
        ),
        migrations.AddField(
            model_name='branches',
            name='cooperator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branch_cooperator', to='A_dbms.Cooperators', verbose_name='授信银行'),
        ),
        migrations.AddField(
            model_name='articles',
            name='assistant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assistant_employee', to=settings.AUTH_USER_MODEL, verbose_name='项目助理'),
        ),
        migrations.AddField(
            model_name='articles',
            name='buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='articles',
            name='control',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='control_employee', to=settings.AUTH_USER_MODEL, verbose_name='风控专员'),
        ),
        migrations.AddField(
            model_name='articles',
            name='custom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='article_custom', to='A_dbms.Customes', verbose_name='客户'),
        ),
        migrations.AddField(
            model_name='articles',
            name='director',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='director_employee', to=settings.AUTH_USER_MODEL, verbose_name='项目经理'),
        ),
        migrations.AddField(
            model_name='articles',
            name='expert',
            field=models.ManyToManyField(related_name='article_expert', to='A_dbms.Experts', verbose_name='评审委员'),
        ),
        migrations.AddField(
            model_name='appraisals',
            name='article',
            field=models.ManyToManyField(blank=True, null=True, related_name='appraisal_article', to='A_dbms.Articles', verbose_name='参评项目'),
        ),
        migrations.AddField(
            model_name='appraisals',
            name='meeting_buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='meeting_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='agrees',
            name='agree_buildor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agree_buildor_employee', to=settings.AUTH_USER_MODEL, verbose_name='创建人'),
        ),
        migrations.AddField(
            model_name='agrees',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agree_article', to='A_dbms.Articles', verbose_name='纪要'),
        ),
        migrations.AddField(
            model_name='agrees',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agree_branch', to='A_dbms.Branches', verbose_name='放款银行'),
        ),
        migrations.AddField(
            model_name='agreeesextend',
            name='agree',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='extend_agree', to='A_dbms.Agrees', verbose_name='委托合同'),
        ),
        migrations.AlterUniqueTogether(
            name='singlequota',
            unique_together={('summary', 'credit_model')},
        ),
        migrations.AlterUniqueTogether(
            name='ownership',
            unique_together={('warrant', 'owner')},
        ),
        migrations.AlterUniqueTogether(
            name='comments',
            unique_together={('summary', 'expert')},
        ),
        migrations.AlterUniqueTogether(
            name='branches',
            unique_together={('name', 'cooperator')},
        ),
    ]
